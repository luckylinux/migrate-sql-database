ersion: '3'
services:
  migration-postgresql-testing:
    container_name: migration-postgresql-testing
    image: postgres:latest
    pull_policy: "missing"
    user: "root"
    restart: "unless-stopped"
    # Only need to forward Ports if using the `podman` (default) Network and wanting to connect from the outside World
    #ports:
    #  - "5432:5432"
    networks:
      # Only if Ports are Open to the outside World
      #- podman
      # For Production with DNS Resolution Enabled
      - homeassistant_internal
      - database_internal
    volumes:
      - ./test/containers/data/migration-postgresql-testing:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "homeassistant", "-U", "homeassistant"]
      interval: 30s
      timeout: 20s
      retries: 3
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_INTERMEDIARY_DB}
      - POSTGRES_USER=${DATABASE_INTERMEDIARY_USER}
      - POSTGRES_PASSWORD=${DATABASE_INTERMEDIARY_PASSWORD}
      #- POSTGRES_HOST_AUTH_METHOD=trust

  migration-timescaledb-testing:
    container_name: migration-timescaledb-testing
    image: timescale/timescaledb-ha:pg16-all
    pull_policy: "missing"
    user: "root"
    restart: "unless-stopped"
    # Only need to forward Ports if using the `podman` (default) Network and wanting to connect from the outside World
    #ports:           
    #  - "5432:5432"
    networks:
      # Only if Ports are Open to the outside World
      #- podman
      # For Production with DNS Resolution Enabled
      - homeassistant_internal
      - database_internal
    volumes:
      - ./test/containers/data/migration-timescaledb-testing:/home/postgres/pgdata/data          # TimescaleDB-HA
      #- ./test/containers/data/migration-timescaledb-testing:/var/lib/postgresql/data           # !!!! TimescaleDB !!!!
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "homeassistant", "-U", "homeassistant"]
      interval: 30s
      timeout: 20s
      retries: 3
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_DESTINATION_DB}
      - POSTGRES_USER=${DATABASE_DESTINATION_USER}
      - POSTGRES_PASSWORD=${DATABASE_INTERMEDIARY_PASSWORD}
    #  - POSTGRES_HOST_AUTH_METHOD=trust


networks:
  # For access to outside services
  # !! DNS Resolution of Host Names is DISABLED !!
  podman:
    external: true
  # For ingress HTTPS Proxy
  database_internal:
    internal: true # No access to outside
    external: true # Created externally, not by podman-compose
  # For Internal Communication between HomeAssistant and the Database
  homeassistant_internal:
    internal: true # No access to outside
    external: true # Created externally, not by podman-compose
